#include <stdio.h>
#include <limits.h>

int n, cost[10][10];
int minCost = INT_MAX;

// Function to calculate the cost of a given tour
int calculateCost(int tour[]) {
    int totalCost = 0;
    for (int i = 0; i < n - 1; i++) {
        totalCost += cost[tour[i]][tour[i + 1]];
    }
    totalCost += cost[tour[n - 1]][tour[0]]; // Return to start
    return totalCost;
}

// Function to generate all permutations of cities and find the minimum cost
void tsp(int tour[], int visited[], int count) {
    if (count == n) {
        int currentCost = calculateCost(tour);
        if (currentCost < minCost) {
            minCost = currentCost;
        }
        return;
    }

    for (int i = 0; i < n; i++) {
        if (!visited[i]) {
            visited[i] = 1;
            tour[count] = i;
            tsp(tour, visited, count + 1);
            visited[i] = 0;
        }
    }
}

int main() {
    printf("Enter number of cities: ");
    scanf("%d", &n);

    printf("Enter cost matrix:\n");
    for (int i = 0; i < n; i++) {
        for (int j = 0; j < n; j++) {
            scanf("%d", &cost[i][j]);
        }
    }

    int tour[10] = {0};
    int visited[10] = {0};
    visited[0] = 1; // Start from the first city
    tour[0] = 0; // First city is visited first
    tsp(tour, visited, 1);

    printf("Minimum cost of traveling salesman tour: %d\n", minCost);
    return 0;
}

